server:
  port: ${APP_PORT}

spring:
  cloud:
    openfeign:
      client:
        config:
          vk-client:
            url: ${SPRING_VK_INTROSPECTION_URI}
            client-id: ${SPRING_VK_CLIENT_ID}
            client-secret: ${SPRING_VK_CLIENT_SECRET}
            api-version: ${SPRING_VK_API_VERSION}
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driverClassName: org.postgresql.Driver
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show_sql: true
    open-in-view: true #lock auto start transactional anywhere
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    defer-datasource-initialization: true #откладывает инициализацию данных в бд, пока хибер не сделает таблицы
  sql:
    init:
      mode: always #unlock init sql from data.sql
      continue-on-error: true
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 11MB
#  sql:
#    init:
#      mode: always

logging:
  level:
    root: info


# swagger
springdoc:
  default-produces-media-type: application/json

path:
  main: tribe
  tmp: temp
  image: image
  avatar: avatar
  event: event
  user: user

keys:
  access-private: access_private.der
  access-public: access_public.pem
  refresh-private: refresh_private.der
  refresh-public: refresh_public.pem
google:
#  client-id: 407408718192.apps.googleusercontent.com for tests Nikita
  client-id: ${SPRING_GOOGLE_CLIENT_ID}
